#!/bin/bash

VIMBASE=~/.vim
cd $VIMBASE

function Usage {
   echo "$0: bundlename"
  exit
}

if [ $# -ne 1 ]; then
  echo "Please provide one bundle name from the bundle directory"
  Usage
fi

function everything {
  for BUNDLE in `ls bundle`
  do
    if [ -L bundle/$BUNDLE ]; then
      echo `pwd`
      cd bundle.available/${1}
      echo `pwd`
      AVHASH=`git rev-parse HEAD 2>/dev/null`
      cd ../bundle
      echo `pwd`
      MYHASH=`git rev-parse HEAD 2>/dev/null`
      echo `pwd`
      cd ..
      echo $AVHASH
      echo $MYHASH
      exit
      if [ $AVHASH != $MYHASH ]; then
        echo "bundle/${1} is a symlink to a git repo at a different rev than the available ${1}"
        continue
      fi
    	echo "Disabling $BUNDLE"
    	rm -f bundle/$BUNDLE
    fi
  done
  exit
}

if [ ${1} == "all" ]; then
  everything
fi

BUNDLE=`basename $(ls -d bundle/${1} 2>/dev/null ) 2>/dev/null | head -1`

if [ -z $BUNDLE ]; then
  echo "${1} isn't enabled"
  exit 1
fi

# If BUNDLE is enabled already, it has to be a symlink
if [ ! -L bundle/${1} ]; then
echo "bundle/${1} isn't under the control of bunny."
exit 1
fi

# If BUNDLE is enabled already & a symlink it must be a git repo w/ the same HEAD as the available BUNDLE
AVHASH=`cd bundle.available/${1} && git rev-parse HEAD 2>/dev/null`
MYHASH=`cd bundle/${1} && git rev-parse HEAD 2>/dev/null`
if [ $AVHASH != $MYHASH ]; then
echo "bundle/${1} is a symlink to a git repo at a different rev than the available ${1}"
exit 1
fi

rm -f bundle/$BUNDLE
echo "Disabling $BUNDLE"
